import { useEffect, useState } from 'react';
import Head from 'next/head'
import CountryCard from '../components/CountryCard';
import SearchInput from '../components/SearchInput';
import SelectFilter from '../components/SelectFilter';
import Link from 'next/link';

const PAGE_SIZE = 20

export default function Home({ data }) {

  const [query, setQuery] = useState('')
  const [filteredData, setFilteredData] = useState(data)
  const [next, setNext] = useState(PAGE_SIZE)


  const  searchCountry = (e) => {
    setQuery(e.target.value)
    const filtered = data.filter(country => country.name.common.toLowerCase().includes(e.target.value.toLowerCase()))
    setFilteredData([...filtered])
  }

  const handleSelect = (e) => {

    if (e.target.value === 'az') {
      const filtered = data.sort((a, b) => a.name.common.localeCompare(b.name.common))
      setFilteredData([...filtered])
    }
    if (e.target.value === 'all') {
      setFilteredData(...filteredData)
    }
    if (e.target.value === 'population') { 
      const filtered = data.sort((a, b) => b.population - a.population)
      setFilteredData([...filtered])
    }
    if (e.target.value === 'africa') { 
      const filtered = data.filter(country => country.region === 'Africa')
      setFilteredData([...filtered])
    }
    if (e.target.value === 'asia') {
      const filtered = data.filter(country => country.region === 'Asia')
      setFilteredData([...filtered])
    }
    if (e.target.value === 'europe') { 
      const filtered = data.filter(country => country.region === 'Europe')
      setFilteredData([...filtered])
    }
    if (e.target.value === 'americas') {
      const filtered = data.filter(country => country.region === 'Americas')
      setFilteredData([...filtered])
    }
    if (e.target.value === 'oceania') {
      const filtered = data.filter(country => country.region === 'Oceania')
      setFilteredData([...filtered])
    }
  }

  const handleMore = () => {
    setNext(next + PAGE_SIZE)
  }

  useEffect(() => { }, [filteredData])


 
  return (
    <>
      <Head>
        <title>Countries v3 - NextJS - TailwindCSS</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="sticky w-full top-0 bg-white z-10 py-5 shadow-lg mb-5">
        <div className="container mx-auto px-5">
          <h1 className='text-3xl font-bold mb-5'>Countries</h1>
          <div className="flex gap-5 flex-col justify-center">
            <div className="flex gap-20 justify-between">
              <SearchInput query={query} searchCountry={searchCountry} />
              <SelectFilter handleSelect={handleSelect} />
            </div>
            <div className='text-center'>
              <span className="font-bold">{filteredData.length}</span> / <span className="font-medium">{data.length}</span>
            </div>
          </div>
        </div>
      </div>
      <div className='container mx-auto mb-5 px-5'>
        {
          filteredData.length > 0 ? (
            <div className='grid grid-cols-1 lg:grid-cols-4 gap-4 md:grid-cols-2'>
              {filteredData.slice(0, next).map(country => (
                <Link href={`/detail/${country.cca3?.toLowerCase()}`} key={country.name.common}>
                  <a>
                    <CountryCard country={country} />
                  </a>
                </Link>
              ))}
            </div>
          ) : (
              <div className='text-center'>
                <h2 className='text-xl font-bold'>No Countries Found</h2>
              </div>
          )
        }
        {next < filteredData?.length && (
          <button
            className="w-full mt-5 text-gray-900 bg-white border border-gray-300 focus:outline-none hover:bg-gray-100 focus:ring-4 focus:ring-gray-200 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 dark:bg-gray-800 dark:text-white dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-600 dark:focus:ring-gray-700"
            onClick={handleMore}
          >
            Load more
          </button>
        )}
      </div>
    </>
  )
}

export async function getStaticProps() {
  const res = await fetch('https://restcountries.com/v3.1/all')
  const data = await res.json()
  return {
    props: {
      data,
    },
  }
}
